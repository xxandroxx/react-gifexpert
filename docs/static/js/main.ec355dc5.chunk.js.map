{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","components/GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifs","category","cant","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","original","GifGridItem","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","console","log","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"8KAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAqBC,OACI,wBAAOC,UAAU,WAAjB,UACI,yCAEA,sBAAMC,SAjBQ,SAAAC,GACnBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAS,IAC1BN,EAAc,IAEdH,GAAc,iBAAM,CAACE,QAWrB,SACI,uBACIE,UAAU,cACVM,KAAK,OACLC,MAAOT,EACPU,SA1BG,SAAAN,GAChBH,EAAcG,EAAEO,OAAOF,gB,8BCTjBG,EAAO,uCAAG,WAAMC,EAAUC,GAAhB,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUJ,GAD7C,+DAEAK,MAAMF,GAFN,cAEbG,EAFa,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAIDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,SAASZ,QAXf,kBAebM,GAfa,4CAAH,wDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OAEQ,sBAAKd,UAAU,gDAAf,UACI,6BAAKwB,IACL,qBAAKxB,UAAU,GAAG4B,IAAKd,EAAKe,IAAKL,QCHpCM,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAIrB,ECNwB,SAACA,GACzB,MAA0Bd,mBAAS,CAC/BsB,KAAM,GACNY,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLd,KAAKiB,EACLL,SAAS,SAKtB,CAACpB,IAIGqB,EDdwBK,CAAa1B,GAAhCc,EAAZ,EAAON,KAAaY,EAApB,EAAoBA,QAOpB,OALAO,QAAQC,MAMJ,gCACI,oBAAIvC,UAAU,uDAAd,SAAsEW,IAErEoB,EAAU,mBAAG/B,UAAU,mCAAb,wBAAiE,KAE5E,qBAAKA,UAAU,qBAAf,SAGIyB,EAAOJ,KAAI,SAAAC,GACP,OAAO,cAAC,EAAD,eAECA,GADCA,EAAIC,aEvBpBiB,EAAe,WAExB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAGA,OACI,gCACI,sBAAKI,UAAU,QAAf,UACI,wDAEA,0BAGJ,sBAAKA,UAAU,kBAAf,UAEI,uBAAOA,UAAU,sBAAjB,SAEI,qBAAKA,UAAU,qBAAf,SACI,cAAC,EAAD,CAAaJ,cAAeA,QAIpC,kCACI,6BAGI6C,EAAWpB,KAAI,SAACV,GACZ,OAAO,cAAC,EAAD,CAEPA,SAAUA,GADLA,iBCxB3B+B,EAAUC,SAASC,cAAc,SAEvCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.ec355dc5.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n\r\n   const HandleValue = e =>{\r\n       setInputValue(e.target.value);\r\n   } \r\n\r\n   const DetenerRefresh = e =>{\r\n       e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setInputValue('');\r\n       \r\n            setCategories(() => [inputValue]);\r\n        }\r\n       \r\n   }\r\n\r\n\r\n\r\n    return (\r\n        <aside className='buscador'>\r\n            <h3>Buscar:</h3>\r\n\r\n            <form onSubmit={DetenerRefresh}>\r\n                <input\r\n                    className='inputSearch' \r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange={HandleValue}\r\n                />\r\n            </form>\r\n  \r\n        </aside>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","\r\n\r\nexport const getGifs = async(category, cant) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=12&api_key=fTlcugxLI3CvVFv3R8PXr6d2YQglfva5`;\r\n    const resp = await fetch(url);\r\n    const {data} =  await resp.json();\r\n\r\n \r\n\r\n    const gifs = data.map(img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.original.url\r\n        }\r\n    });\r\n\r\n   return gifs;\r\n    \r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n \r\n\r\n    return (\r\n        \r\n            <div className='mostrar animate__animated animate__fadeInDown'>\r\n                <h3>{title}</h3>\r\n                <img className='' src={url} alt={title}/>\r\n            </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    console.log();\r\n   \r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className='titulo-mostrar animate__animated animate__fadeInDown'>{category}</h3>\r\n\r\n            {loading ? <p className='animate__animated animate__flash'>Loading...</p> : null}\r\n\r\n            <div className='contenedor-mostrar'>\r\n            {\r\n                \r\n                images.map(img =>{\r\n                    return <GifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                 \r\n                    />\r\n                })\r\n            }\r\n            </div>\r\n           \r\n           \r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n        getGifs(category)\r\n            .then(imgs =>{\r\n                setstate({\r\n                    data:imgs,\r\n                    loading: false\r\n                })\r\n            \r\n                \r\n            })\r\n    }, [category])\r\n\r\n    \r\n\r\n    return state;\r\n}","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Piece']);\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div className='title'>\r\n                <h2>Encuentra tu Gif ideal</h2>\r\n            \r\n                <hr/>\r\n           </div>\r\n\r\n            <div className='contenedor-main'>\r\n\r\n                <aside className='contenedor-buscador'>\r\n\r\n                    <div className='contenido-buscador'>\r\n                        <AddCategory setCategories={setCategories}/>\r\n                    </div>\r\n                </aside>\r\n\r\n                <section>\r\n                    <ol>\r\n                        \r\n                        {\r\n                        categories.map((category) =>{\r\n                            return <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                            />\r\n                        })\r\n\r\n                        \r\n                        }\r\n\r\n                      \r\n                       \r\n                    </ol>\r\n\r\n                </section>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport './index.css';\nimport { GifExpertApp } from './components/GifExpertApp';\n\n\n\n\nconst divRoot = document.querySelector('#root');\n\nReactDOM.render(<GifExpertApp />, divRoot);\n\n"],"sourceRoot":""}